<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>编程 on Fable&#39;s blog</title>
    <link>https://fabletang.github.io/series/%E7%BC%96%E7%A8%8B/</link>
    <description>Recent content in 编程 on Fable&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2016-{year} Fable Tang. All Rights Reserved.</copyright>
    <lastBuildDate>Fri, 26 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://fabletang.github.io/series/%E7%BC%96%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>java模式:单例/多例/线程单例</title>
      <link>https://fabletang.github.io/posts/2021-02-26-java_singleten_pattern/</link>
      <pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://fabletang.github.io/posts/2021-02-26-java_singleten_pattern/</guid>
      <description>java单例模式有5种实现方式,推荐以下3种方式. 一、单例-饿汉式: 特点:线程安全，不能延时加载 public enum SingletonDemo1 { //枚举元素本身就是单例 INSTANCE; //添加自</description>
    </item>
    
    <item>
      <title>Golang代码结构</title>
      <link>https://fabletang.github.io/posts/2017-05-01-the_struct_of_go_project/</link>
      <pubDate>Mon, 01 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://fabletang.github.io/posts/2017-05-01-the_struct_of_go_project/</guid>
      <description>Go的设计思想是代码至上，依赖于代码而不是象其它语言依赖于编译好的库。尽管go的版本号已经到1.8.1了,但是还没没有好的package版本</description>
    </item>
    
  </channel>
</rss>
